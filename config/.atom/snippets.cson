# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#

'.source.js':
  'Use Strict':
    'prefix': 'strict'
    'body': """
      'use strict';

      $1

    """
  'Redux Reducer':
    'prefix': 'reducer'
    'body': """
      'use strict';

      const DEFAULT_STATE = $1

      const $2 = (state = DEFAULT_STATE, action) => {
        switch (action.type) {
          default:
            return state;
        }
      }

      export default $2;

    """
  'Redux Container':
    'prefix': 'container'
    'body': """
      'use strict';

      import { connect } from 'react-redux';
      import $1 from '../components/$2';

      const mapStateToProps = (state) => ({

      });

      const mapDispatchToProps = (dispatch) => ({

      });

      const $3 = connect(
        mapStateToProps,
        mapDispatchToProps
      )($1);

      export default $3

    """
  'Redux Action':
    'prefix': 'action'
    'body': """
      export const $1 = ($2) => ({
        type: '$3',
        $4
      });
    """
  'React Component':
    'prefix': 'component'
    'body': """
      'use strict';

      import React, { Component, PropTypes } from 'react';

      class $1 extends Component {

        render() {
          return (
            <div />
          )
        }

      }

      $1.propTypes = {

      }

      $1.defaultProps = {

      }

      export default $1;

    """
